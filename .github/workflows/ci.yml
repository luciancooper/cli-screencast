name: CI

on:
  push:
    branches: [main]
    paths-ignore: ['**.md']
  pull_request:
    branches: [main]
    paths-ignore: ['**.md']
  workflow_dispatch:

jobs:
  test:
    name: Node ${{ matrix.node }} on ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        node: [18, 20]

    runs-on: ${{ matrix.os }}

    steps:
    - name: checkout repo
      uses: actions/checkout@v4

    - name: setup node ${{ matrix.node }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}

    - name: get yarn cache directory path
      id: yarn-cache-dir-path
      shell: bash
      run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

    - name: restore yarn cache directory
      id: yarn-cache
      uses: actions/cache@v4
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: install dependencies
      run: yarn --frozen-lockfile

    - name: run tests
      run: yarn test --coverage

    - name: upload coverage artifact
      uses: actions/upload-artifact@v4
      if: matrix.node == 20
      with:
        name: coverage-${{ runner.os }}
        path: coverage

  coverage:
    name: Codecov ${{ matrix.os }}
    needs: [test]

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: checkout repo
      uses: actions/checkout@v4

    - name: download coverage artifact
      uses: actions/download-artifact@v4
      with:
        name: coverage-${{ runner.os }}
        path: coverage

    - name: display structure of coverage artifact
      run: ls -R
      working-directory: coverage

    - name: upload to codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: ${{ runner.os }}
